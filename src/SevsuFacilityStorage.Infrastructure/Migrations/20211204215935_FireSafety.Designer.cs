// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SevsuFacilityStorage.Data;

namespace SevsuFacilityStorage.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211204215935_FireSafety")]
    partial class FireSafety
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c5d6ac00-7fbd-41f4-a31a-e5113b9603e5",
                            ConcurrencyStamp = "b14ee58d-9035-4467-8913-4cb94ea02a41",
                            Name = "admin"
                        },
                        new
                        {
                            Id = "df29c721-f268-41d5-b45f-cfee7d072e56",
                            ConcurrencyStamp = "92609d5b-ff78-45ac-9912-ce17c7ee0ac2",
                            Name = "user"
                        },
                        new
                        {
                            Id = "21b66b51-f722-4968-802f-b8c8a53ca0e8",
                            ConcurrencyStamp = "f02aa115-2518-499c-aadb-c62d0f7b9c3e",
                            Name = "moderator"
                        },
                        new
                        {
                            Id = "7dde465c-2ea7-4220-9716-a81c856b2037",
                            ConcurrencyStamp = "6c39e1a6-92da-48ed-a5c4-2bddcbd68517",
                            Name = "responsible"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Core.Models.AdditionalCharacteristics", b =>
                {
                    b.Property<Guid>("AdditionalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PremisesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdditionalId", "PremisesId");

                    b.ToTable("AdditionalCharacteristics");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Core.Models.PurposeOfPremises", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PremisesDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PremisesDescriptionId")
                        .IsUnique();

                    b.ToTable("PurposeOfPremises");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.AccessibilityForPersonsWithDisabilities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailabilityCharacteristics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PremisesDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PremisesDescriptionId")
                        .IsUnique();

                    b.ToTable("AccessibilityForPersonsWithDisabilities");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.AdditionalAdministrativePremiseDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllowedJobsQuantity")
                        .HasColumnType("int");

                    b.Property<int>("FilledfJobsQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AdditionalAdministrativePremiseDescriptions");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.AdditionalEducationalPremiseDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableSeatsQuantity")
                        .HasColumnType("int");

                    b.Property<string>("BoardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasBoard")
                        .HasColumnType("bit");

                    b.Property<bool>("HasStorage")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTeachingAids")
                        .HasColumnType("bit");

                    b.Property<int>("TeacherJobsQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AdditionalEducationalPremiseDescriptions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AdditionalEducationalPremiseDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.BurnableMaterial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyWareHouseOrProductionPremiseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityKG")
                        .HasColumnType("int");

                    b.Property<int>("StorageArea")
                        .HasColumnType("int");

                    b.Property<string>("UsageOrstorageMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyWareHouseOrProductionPremiseId");

                    b.ToTable("BurnableMaterials");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.DevicesDangerousMaterial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyWareHouseOrProductionPremiseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UsageOrstorageMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyWareHouseOrProductionPremiseId");

                    b.ToTable("DevicesDangerousMaterials");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Door", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeneralInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsElectronicLock")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneralInformationId");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.ElectricitySupply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("HighSocketQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeEnergizingDevice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHighSocket")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStandartSocket")
                        .HasColumnType("bit");

                    b.Property<int?>("StandartSocketQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ElectricitySupply");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.EmergencyExit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceId");

                    b.ToTable("EmergencyExits");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.EmergencySystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("EmergencySystems");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.EnsuringSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasAutomaticNotificationSystem")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSecurityAlarmSystem")
                        .HasColumnType("bit");

                    b.Property<Guid>("PremisesDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PremisesDescriptionId")
                        .IsUnique();

                    b.ToTable("EnsuringSecurity");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PremisesDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PremisesDescriptionId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.ExplosiveProofEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationAccessabilityInZoneClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExplosiveProofClassLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExplosiveProofClassType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FireSafetyWareHouseOrProductionPremiseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperatureClass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyWareHouseOrProductionPremiseId");

                    b.ToTable("ExplosiveProofEquipments");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireAlarm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("FireAlarms");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireExtinguisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EnsuringSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnsuringSecurityId");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("FireExtinguishers");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireFightingSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("FireFightingSystems");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireOrExplosiveDangerZone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<Guid>("FireSafetyWareHouseOrProductionPremiseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyWareHouseOrProductionPremiseId");

                    b.ToTable("FireOrExplosiveDangerZones");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireProofConstruction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConstructionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreatmentArea")
                        .HasColumnType("int");

                    b.Property<DateTime>("TreatmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("FireProofConstructions");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireRetainingDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("FireRetainingDevices");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyDoor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("FireSafetyDoors");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyEnsuriance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DistanceToFloorExit")
                        .HasColumnType("int");

                    b.Property<string>("FireSafetyMarkCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FireSafetyMarkZoneClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("ForeignerStayPossibillity")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFireSafetyMaterials")
                        .HasColumnType("bit");

                    b.Property<bool>("HasInstruction")
                        .HasColumnType("bit");

                    b.Property<int>("PeopleNumberLimit")
                        .HasColumnType("int");

                    b.Property<Guid>("PremisesDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PremisesDescriptionId");

                    b.ToTable("FireSafetyEnsuriances");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasTelephone")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceOfNearestFireExtinguisher")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceId")
                        .IsUnique();

                    b.ToTable("FireSafetyEnsurianceHardwares");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyMark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceId");

                    b.ToTable("FireSafetyMarks");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyMassPeoplePremise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasEmergencyLighting")
                        .HasColumnType("bit");

                    b.Property<bool>("HasEmergencyPlan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceId")
                        .IsUnique();

                    b.ToTable("FireSafetyMassPeoplePremises");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyPlumbing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsStaffed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkable")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("FireSafetyPlumbings");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyTrapdoor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("FireSafetyTrapdoors");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyWareHouseOrProductionPremise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FireOrExplosionHazardCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FireSafetyEnsurianceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceId")
                        .IsUnique();

                    b.ToTable("FireSafetyWareHouseOrProductionPremises");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireShield", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Complectation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("FireShields");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.GasAndSmokeProtectKit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("GasAndSmokeProtectKits");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.GeneralInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("CeilingCovering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ElectricitySupplyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FloorCovering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<Guid?>("NetworkCharacteristicsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PremisesDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WallCovering")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElectricitySupplyId");

                    b.HasIndex("NetworkCharacteristicsId");

                    b.HasIndex("PremisesDescriptionId")
                        .IsUnique();

                    b.ToTable("GeneralInformation");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Heating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeneralInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneralInformationId");

                    b.ToTable("Heatings");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.LightingDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeneralInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneralInformationId");

                    b.ToTable("LightingDevices");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.LowMobilityPlace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceId");

                    b.ToTable("LowMobilityPlaces");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.NetworkCharacteristics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsFHDNetwork")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternerAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLVC")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRJ45Socket")
                        .HasColumnType("bit");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SocketsOccupied")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NetworkCharacteristics");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RepairStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResponsibilityForPremisesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RepairStatusId")
                        .IsUnique();

                    b.HasIndex("ResponsibilityForPremisesId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.PremisesDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfCurrentInformation")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtractFromEGRN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("HousingIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Index")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberByBTI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PremisesDescriptions");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.RepairStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PlannedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PremisesDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UnderRepair")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PremisesDescriptionId")
                        .IsUnique();

                    b.ToTable("RepairStatuses");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.ResponsibilityForPremises", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Basis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PremisesDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PremisesDescriptionId")
                        .IsUnique();

                    b.ToTable("ResponsibilityForPremises");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Software", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PremisesDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PremisesDescriptionId");

                    b.ToTable("Softwares");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.SurfaceFireDangerClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyMassPeoplePremiseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SurfaceClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurfaceLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurfaceType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyMassPeoplePremiseId");

                    b.ToTable("SurfaceFireDangerClasses");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.TechnicalreEquipmentDate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FireSafetyMassPeoplePremiseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyMassPeoplePremiseId");

                    b.ToTable("TechnicalreEquipmentDates");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.VentilationSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FireSafetyEnsurianceHardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FireSafetyEnsurianceHardwareId");

                    b.ToTable("VentilationSystems");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Windows", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Direction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GeneralInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Grids")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obstacles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneralInformationId");

                    b.ToTable("Windows");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.ComputerClassDescription", b =>
                {
                    b.HasBaseType("SevsuFacilityStorage.Models.AdditionalEducationalPremiseDescription");

                    b.Property<int>("PersonalComputersQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ComputerClassDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.LabClassDescription", b =>
                {
                    b.HasBaseType("SevsuFacilityStorage.Models.AdditionalEducationalPremiseDescription");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LabClassDescription_Type");

                    b.HasDiscriminator().HasValue("LabClassDescription");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SevsuFacilityStorage.Core.Models.PurposeOfPremises", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.PremisesDescription", "PremisesDescription")
                        .WithOne("PurposeOfPremises")
                        .HasForeignKey("SevsuFacilityStorage.Core.Models.PurposeOfPremises", "PremisesDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremisesDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.AccessibilityForPersonsWithDisabilities", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.PremisesDescription", "PremisesDescription")
                        .WithOne("AccessibilityForPersonsWithDisabilities")
                        .HasForeignKey("SevsuFacilityStorage.Models.AccessibilityForPersonsWithDisabilities", "PremisesDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremisesDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.BurnableMaterial", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyWareHouseOrProductionPremise", "FireSafetyWareHouseOrProductionPremise")
                        .WithMany("BurnableMaterials")
                        .HasForeignKey("FireSafetyWareHouseOrProductionPremiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyWareHouseOrProductionPremise");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.DevicesDangerousMaterial", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyWareHouseOrProductionPremise", "FireSafetyWareHouseOrProductionPremise")
                        .WithMany("DangerousMaterials")
                        .HasForeignKey("FireSafetyWareHouseOrProductionPremiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyWareHouseOrProductionPremise");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Door", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.GeneralInformation", null)
                        .WithMany("Doors")
                        .HasForeignKey("GeneralInformationId");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.EmergencyExit", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsuriance", "FireSafetyEnsuriance")
                        .WithMany("EmergencyExits")
                        .HasForeignKey("FireSafetyEnsurianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsuriance");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.EmergencySystem", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("EmergencySystems")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.EnsuringSecurity", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.PremisesDescription", "PremisesDescription")
                        .WithOne("EnsuringSecurity")
                        .HasForeignKey("SevsuFacilityStorage.Models.EnsuringSecurity", "PremisesDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremisesDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Equipment", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.PremisesDescription", "PremisesDescription")
                        .WithMany("Equipments")
                        .HasForeignKey("PremisesDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremisesDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.ExplosiveProofEquipment", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyWareHouseOrProductionPremise", "FireSafetyWareHouseOrProductionPremise")
                        .WithMany("ExplosiveProofEquipments")
                        .HasForeignKey("FireSafetyWareHouseOrProductionPremiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyWareHouseOrProductionPremise");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireAlarm", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("FireAlarms")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireExtinguisher", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.EnsuringSecurity", null)
                        .WithMany("FireExtinguishers")
                        .HasForeignKey("EnsuringSecurityId");

                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("FireExtinguishers")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireFightingSystem", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("FireFightingSystems")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireOrExplosiveDangerZone", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyWareHouseOrProductionPremise", "FireSafetyWareHouseOrProductionPremise")
                        .WithMany("FireOrExplosiveDangerZones")
                        .HasForeignKey("FireSafetyWareHouseOrProductionPremiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyWareHouseOrProductionPremise");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireProofConstruction", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("FireProofConstructions")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireRetainingDevice", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("FireRetainingDevices")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyDoor", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("FireSafetyDoors")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyEnsuriance", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.PremisesDescription", "PremisesDescription")
                        .WithMany()
                        .HasForeignKey("PremisesDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremisesDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsuriance", "FireSafetyEnsuriance")
                        .WithOne("FireSafetyEnsurianceHardware")
                        .HasForeignKey("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsuriance");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyMark", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsuriance", "FireSafetyEnsuriance")
                        .WithMany("FireSafetyMarks")
                        .HasForeignKey("FireSafetyEnsurianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsuriance");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyMassPeoplePremise", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsuriance", "FireSafetyEnsuriance")
                        .WithOne("FireSafetyMassPeoplePremises")
                        .HasForeignKey("SevsuFacilityStorage.Models.FireSafetyMassPeoplePremise", "FireSafetyEnsurianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsuriance");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyPlumbing", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("FireSafetyPlumbings")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyTrapdoor", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("FireSafetyTrapdoors")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyWareHouseOrProductionPremise", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsuriance", "FireSafetyEnsuriance")
                        .WithOne("FireSafetyWareHouseOrProductionPremises")
                        .HasForeignKey("SevsuFacilityStorage.Models.FireSafetyWareHouseOrProductionPremise", "FireSafetyEnsurianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsuriance");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireShield", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("FireShields")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.GasAndSmokeProtectKit", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("GasAndSmokeProtectKits")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.GeneralInformation", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.ElectricitySupply", "ElectricitySupply")
                        .WithMany()
                        .HasForeignKey("ElectricitySupplyId");

                    b.HasOne("SevsuFacilityStorage.Models.NetworkCharacteristics", "NetworkCharacteristics")
                        .WithMany()
                        .HasForeignKey("NetworkCharacteristicsId");

                    b.HasOne("SevsuFacilityStorage.Models.PremisesDescription", "PremisesDescription")
                        .WithOne("GeneralInformation")
                        .HasForeignKey("SevsuFacilityStorage.Models.GeneralInformation", "PremisesDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElectricitySupply");

                    b.Navigation("NetworkCharacteristics");

                    b.Navigation("PremisesDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Heating", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.GeneralInformation", null)
                        .WithMany("Heatings")
                        .HasForeignKey("GeneralInformationId");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.LightingDevice", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.GeneralInformation", null)
                        .WithMany("LightingDevices")
                        .HasForeignKey("GeneralInformationId");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.LowMobilityPlace", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsuriance", "FireSafetyEnsuriance")
                        .WithMany("LowMobilityPlaces")
                        .HasForeignKey("FireSafetyEnsurianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsuriance");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Person", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.RepairStatus", "RepairStatus")
                        .WithOne("Person")
                        .HasForeignKey("SevsuFacilityStorage.Models.Person", "RepairStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SevsuFacilityStorage.Models.ResponsibilityForPremises", "ResponsibilityForPremises")
                        .WithMany("ResponsiblePersons")
                        .HasForeignKey("ResponsibilityForPremisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairStatus");

                    b.Navigation("ResponsibilityForPremises");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.RepairStatus", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.PremisesDescription", "PremisesDescription")
                        .WithOne("RepairStatus")
                        .HasForeignKey("SevsuFacilityStorage.Models.RepairStatus", "PremisesDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremisesDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.ResponsibilityForPremises", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.PremisesDescription", "PremisesDescription")
                        .WithOne("ResponsibilityForPremises")
                        .HasForeignKey("SevsuFacilityStorage.Models.ResponsibilityForPremises", "PremisesDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremisesDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Software", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.PremisesDescription", "PremisesDescription")
                        .WithMany("Softwares")
                        .HasForeignKey("PremisesDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremisesDescription");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.SurfaceFireDangerClass", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyMassPeoplePremise", "FireSafetyMassPeoplePremise")
                        .WithMany("SurfaceFireDangerClasses")
                        .HasForeignKey("FireSafetyMassPeoplePremiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyMassPeoplePremise");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.TechnicalreEquipmentDate", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyMassPeoplePremise", "FireSafetyMassPeoplePremise")
                        .WithMany("TechnicalEquipmentDates")
                        .HasForeignKey("FireSafetyMassPeoplePremiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyMassPeoplePremise");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.VentilationSystem", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", "FireSafetyEnsurianceHardware")
                        .WithMany("VentilationSystems")
                        .HasForeignKey("FireSafetyEnsurianceHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FireSafetyEnsurianceHardware");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.Windows", b =>
                {
                    b.HasOne("SevsuFacilityStorage.Models.GeneralInformation", null)
                        .WithMany("Windows")
                        .HasForeignKey("GeneralInformationId");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.EnsuringSecurity", b =>
                {
                    b.Navigation("FireExtinguishers");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyEnsuriance", b =>
                {
                    b.Navigation("EmergencyExits");

                    b.Navigation("FireSafetyEnsurianceHardware");

                    b.Navigation("FireSafetyMarks");

                    b.Navigation("FireSafetyMassPeoplePremises");

                    b.Navigation("FireSafetyWareHouseOrProductionPremises");

                    b.Navigation("LowMobilityPlaces");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyEnsurianceHardware", b =>
                {
                    b.Navigation("EmergencySystems");

                    b.Navigation("FireAlarms");

                    b.Navigation("FireExtinguishers");

                    b.Navigation("FireFightingSystems");

                    b.Navigation("FireProofConstructions");

                    b.Navigation("FireRetainingDevices");

                    b.Navigation("FireSafetyDoors");

                    b.Navigation("FireSafetyPlumbings");

                    b.Navigation("FireSafetyTrapdoors");

                    b.Navigation("FireShields");

                    b.Navigation("GasAndSmokeProtectKits");

                    b.Navigation("VentilationSystems");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyMassPeoplePremise", b =>
                {
                    b.Navigation("SurfaceFireDangerClasses");

                    b.Navigation("TechnicalEquipmentDates");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.FireSafetyWareHouseOrProductionPremise", b =>
                {
                    b.Navigation("BurnableMaterials");

                    b.Navigation("DangerousMaterials");

                    b.Navigation("ExplosiveProofEquipments");

                    b.Navigation("FireOrExplosiveDangerZones");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.GeneralInformation", b =>
                {
                    b.Navigation("Doors");

                    b.Navigation("Heatings");

                    b.Navigation("LightingDevices");

                    b.Navigation("Windows");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.PremisesDescription", b =>
                {
                    b.Navigation("AccessibilityForPersonsWithDisabilities");

                    b.Navigation("EnsuringSecurity");

                    b.Navigation("Equipments");

                    b.Navigation("GeneralInformation");

                    b.Navigation("PurposeOfPremises");

                    b.Navigation("RepairStatus");

                    b.Navigation("ResponsibilityForPremises");

                    b.Navigation("Softwares");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.RepairStatus", b =>
                {
                    b.Navigation("Person");
                });

            modelBuilder.Entity("SevsuFacilityStorage.Models.ResponsibilityForPremises", b =>
                {
                    b.Navigation("ResponsiblePersons");
                });
#pragma warning restore 612, 618
        }
    }
}
